<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>GIS Earthquakes</title>
<meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
<link href="https://api.mapbox.com/mapbox-gl-js/v2.4.1/mapbox-gl.css" rel="stylesheet">
<script src="https://api.mapbox.com/mapbox-gl-js/v2.4.1/mapbox-gl.js"></script>
<style>
body { margin: 0; padding: 0; }
#map { position: absolute; top: 0; bottom: 0; width: 100%; }
</style>
</head>
<body>
<style>
    .map-overlay {
        font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;
        position: absolute;
        width: 25%;
        top: 0;
        left: 0;
        padding: 10px;
    }

    .map-overlay .map-overlay-inner {
        background-color: #fff;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
        border-radius: 3px;
        padding: 10px;
        margin-bottom: 10px;
    }

    .map-overlay h2 {
        line-height: 24px;
        display: block;
        margin: 0 0 10px;
    }

    .map-overlay .legend .bar {
        height: 10px;
        width: 100%;
        background: linear-gradient(to right, #fca107, #7f3121);
    }

    .map-overlay input {
        background-color: transparent;
        display: inline-block;
        width: 100%;
        position: relative;
        margin: 0;
        cursor: ew-resize;
    }

    /* The switch - the box around the slider */
    .switch {
    position: relative;
    display: inline-block;
    width: 30px;
    height: 17px;
    }

    /* Hide default HTML checkbox */
    .switch input {
    opacity: 0;
    width: 0;
    height: 0;
    }

    /* The slider */
    .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    -webkit-transition: .4s;
    transition: .4s;
    }

    .slider:before {
    position: absolute;
    content: "";
    height: 13px;
    width: 13px;
    left: 2px;
    bottom: 2px;
    background-color: white;
    -webkit-transition: .4s;
    transition: .4s;
    }

    input:checked + .slider {
    background-color: #2196F3;
    }

    input:focus + .slider {
    box-shadow: 0 0 1px #2196F3;
    }

    input:checked + .slider:before {
    -webkit-transform: translateX(13    px);
    -ms-transform: translateX(13px);
    transform: translateX(13px);
    }

    /* Rounded sliders */
    .slider.round {
    border-radius: 34px;
    }

    .slider.round:before {
    border-radius: 50%;
    }
</style>

<div id="map"></div>

<div class="map-overlay top">
    <div class="map-overlay-inner" id="menu">
        <h2>Significant earthquakes in <span id=monthText></span>/<span id=yearText></span></h2>
        <label id="month"></label>
        <input id="slider" type="range" min="0" max="11" step="1" value="0">
        <label for="yearPicker">Select year</label>
        <select id="yearPicker" name="year"></select>
    <div class="map-overlay-inner">
        <div id="legend" class="legend">
            <div class="bar"></div>
            <div>Magnitude (m)</div>
        </div>
    </div>
    <div class="map-overlay-inner">
        <span>AutoPlay</span>
        <!-- <input id="autoPlay" type="checkbox"> -->
        <label class="switch">
            <input id="autoPlay" type="checkbox">
            <span class="slider round"></span>
        </label>
    </div> 
</div>

<script async>
    state = {
        year: 2011,
        month: 1,
        autoPlay: false
    }

    const years = [2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]

    // Get elements for further use
    var yearPicker = document.getElementById('yearPicker');
    var yearText = document.getElementById('yearText');
    var monthSlider = document.getElementById('slider');
    var monthText = document.getElementById('monthText')
    var autoPlay = document.getElementById('autoPlay')
    years.forEach(year => {
        yearPicker.add(new Option(year.toString(), year))
    })
    yearText.innerHTML = years[0];  
    monthText.innerHTML = state.month;

    // Initialize Mapbox
	mapboxgl.accessToken = 'pk.eyJ1Ijoic3BvdHlwb3AiLCJhIjoiY2t1NGJ2aWVpMmNyYzJ1cWhnZGJiNTZlMiJ9.a8RvX6RSf20ddTCPnKJWLw';
    var map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mapbox/light-v10',
        center: [50.4606, 20.7927],
        zoom: 3
    });
    map.on('load', configMapBox)
    // Add a callback function to handle input on slider
    monthSlider.addEventListener('change', handleSliderInput)
    // Add a callback function to handle input on years dropdown menu
    yearPicker.addEventListener('change', handleYearDropDownInput)
    autoPlay.addEventListener('change', handleAutoPlayInput)
    // Handles slider inputs
    async function handleSliderInput(e) {
        var month = parseInt(e.target.value, 10) + 1;
        state.month = month;
        updateEarthQuakes();
    }

    // Handles years picker input
    async function handleYearDropDownInput(e) {
        year = parseInt(yearPicker.value, 10);
        state.year = year;
        updateEarthQuakes();
    }

    async function handleAutoPlayInput(e) {
        state.autoPlay = e.target.checked
    }

    // Makes ajax request to API to get earthquake data
    async function fetchData() {
        let response = await fetch(`api/earthquake?year=${state.year}&month=${state.month}`)
        let data = await response.json();
        return data;
    }

    // Initialize rerender of earthquakes
    async function updateEarthQuakes() {
        yearText.innerHTML = state.year;
        monthText.innerHTML = state.month;
        earthquakes = await fetchData();
        map.getSource("earthquakes").setData(earthquakes);
    }

    async function incrementMonth() {
        if (state.autoPlay === false) return;
        if (monthSlider.value == 11) {
            if (yearPicker.value == years[years.length - 1]) {
                yearPicker.value = years[0]
            } else {
                yearPicker.value++;
            }
            state.year = yearPicker.value 
            monthSlider.value = 0 
        } else {
            monthSlider.value++
        }
        monthSlider.dispatchEvent(new Event('change'));
    }
    setInterval( incrementMonth, 3000);

    // Config MapBox library
    async function configMapBox() {
        let data = await fetchData();

        // Adds Data Source to read from
        map.addSource('earthquakes', {
            'type': 'geojson',
            data: data
        });

        // Renders circles from datasource
        map.addLayer({
            'id': 'earthquake-circles',
            'type': 'circle',
            'source': 'earthquakes',
            'paint': {
                'circle-color': [
                    'interpolate',
                    ['linear'],
                    ['get', 'mag'],
                    6,
                    '#FCA107',
                    8,
                    '#7F3121'
                ],
                'circle-opacity': 0.75,
                'circle-radius': [
                    'interpolate',
                    ['linear'],
                    ['get', 'mag'],
                    6,
                    20,
                    8,
                    40
                ]
            }
        });

        // Renders the power of earthquake on the circle
        map.addLayer({
            'id': 'earthquake-labels',
            'type': 'symbol',
            'source': 'earthquakes',
            'layout': {
                'text-field': [
                    'concat',
                    ['to-string', ['get', 'mag']],
                    'm'
                ],
                'text-font': [
                    'Open Sans Bold',
                    'Arial Unicode MS Bold'
                ],
                'text-size': 12
            },
            'paint': {
                'text-color': 'rgba(0,0,0,0.5)'
            }
        });
    }
</script>
</body>
</html>